
  signal div_speaker   : unsigned(20 downto 0) := (others=>'1'); -- Set for 200ms reset delay

  signal prescaler_spk : unsigned(20 downto 0) := (others=>'0');

-- 10 MHz CPU
gen_clk : process (Q2_Clock)
begin
	if (rising_edge(Q2_Clock)) then -- This CPLD doesn't support dual edge triggering
		if prescaler_cpu = "11" then -- Generate 10Mhz CPU clock
			prescaler_cpu <= "00";
			CPU_CLK_pre <= not CPU_CLK_pre;
		else
			prescaler_cpu <= prescaler_cpu + "1";
		end if;
	end if;
end process gen_clk;

-- Q2-sourced interrupt
gen_irq : process (Q2_Clock)
begin
	-- Generate periodic interrupt at 1000 Hz
	if rising_edge(Q2_Clock) then
		if prescaler_irq = 79999 then
			prescaler_irq <= (others => '0');
			IRQ7 <= '0'; -- Request interrupt
			speaker_pre <= not speaker_pre; -- Invert speaker clock
		else
			if (FC0='1' and FC1='1' and FC2='1') then
				-- IACK recieved; clear interrupt requests
				IRQ7 <= '1';
			end if;
			prescaler_irq <= prescaler_irq + "1";
		end if;
	end if;
end process gen_irq;

Configurable clock
-- Generate CPU freq
  -- 8000000  9  "1001"
  -- 8888889  8  "1000"
  -- 10000000 7  "0111"
  -- 11428571 6  "0110"
  -- 13333333 5  "0101"
  -- 16000000 4  "0100"
  -- 20000000 3  "0011"
  if prescaler_cpu = "1001" then     -- Set this value to (80000000/freq_desired - 1)
    prescaler_cpu <= (others => '0');
    CPU_CLK_pre <= not CPU_CLK_pre;
  else
    prescaler_cpu <= prescaler_cpu + "1";
  end if;
  
  
  
  -- Generate Speaker Freq and power stability
  if prescaler_spk = div_speaker then
    prescaler_spk <= (others => '0');
    speaker_pre <= not speaker_pre;
	 power_stable <= '1'; -- Once a full initial division is complete, power should be stable.
  else
    prescaler_spk <= prescaler_spk + "1";
	 power_stable <= power_stable; -- Hold power stable state
  end if;